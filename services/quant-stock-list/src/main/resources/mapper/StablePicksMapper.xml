<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hao.quant.stocklist.infrastructure.persistence.mapper.StablePicksMapper">

    <resultMap id="StrategyDailyPickMap" type="com.hao.quant.stocklist.infrastructure.persistence.po.StrategyDailyPickPO">
        <id property="id" column="id"/>
        <result property="tradeDate" column="trade_date"/>
        <result property="strategyId" column="strategy_id"/>
        <result property="stockCode" column="stock_code"/>
        <result property="stockName" column="stock_name"/>
        <result property="industry" column="industry"/>
        <result property="score" column="score"/>
        <result property="ranking" column="ranking"/>
        <result property="marketCap" column="market_cap"/>
        <result property="peRatio" column="pe_ratio"/>
        <result property="extraData" column="extra_data"
                typeHandler="com.hao.quant.stocklist.infrastructure.persistence.typehandler.JsonMapTypeHandler"
                jdbcType="OTHER"/>
        <result property="version" column="version"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, trade_date, strategy_id, stock_code, stock_name, industry, score, ranking, market_cap,
        pe_ratio, extra_data, version, create_time, update_time
    </sql>

    <select id="queryDaily" resultMap="StrategyDailyPickMap">
        SELECT <include refid="Base_Column_List"/>
        FROM strategy_daily_picks
        WHERE trade_date = #{tradeDate}
        <if test="strategyId != null and strategyId != ''">
            AND strategy_id = #{strategyId}
        </if>
        <if test="industry != null and industry != ''">
            AND industry = #{industry}
        </if>
        ORDER BY ranking ASC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countDaily" resultType="long">
        SELECT COUNT(1)
        FROM strategy_daily_picks
        WHERE trade_date = #{tradeDate}
        <if test="strategyId != null and strategyId != ''">
            AND strategy_id = #{strategyId}
        </if>
        <if test="industry != null and industry != ''">
            AND industry = #{industry}
        </if>
    </select>

    <select id="queryLatest" resultMap="StrategyDailyPickMap">
        SELECT <include refid="Base_Column_List"/>
        FROM strategy_daily_picks
        <if test="strategyId != null and strategyId != ''">
            WHERE strategy_id = #{strategyId}
        </if>
        <if test="strategyId == null or strategyId == ''">
            WHERE strategy_id IS NOT NULL
        </if>
        ORDER BY trade_date DESC, ranking ASC
        LIMIT #{limit}
    </select>

    <select id="findDetail" resultMap="StrategyDailyPickMap">
        SELECT <include refid="Base_Column_List"/>
        FROM strategy_daily_picks
        WHERE stock_code = #{stockCode}
          AND trade_date = #{tradeDate}
        LIMIT 1
    </select>

    <insert id="batchInsert">
        INSERT INTO strategy_daily_picks (trade_date, strategy_id, stock_code, stock_name, industry, score, ranking,
                                          market_cap, pe_ratio, extra_data, version, create_time, update_time)
        VALUES
        <foreach collection="records" item="item" separator=",">
            (#{item.tradeDate}, #{item.strategyId}, #{item.stockCode}, #{item.stockName}, #{item.industry},
             #{item.score}, #{item.ranking}, #{item.marketCap}, #{item.peRatio},
             #{item.extraData, typeHandler=com.hao.quant.stocklist.infrastructure.persistence.typehandler.JsonMapTypeHandler, jdbcType=OTHER},
             #{item.version}, NOW(), NOW())
        </foreach>
        ON DUPLICATE KEY UPDATE
            stock_name = VALUES(stock_name),
            industry = VALUES(industry),
            score = VALUES(score),
            ranking = VALUES(ranking),
            market_cap = VALUES(market_cap),
            pe_ratio = VALUES(pe_ratio),
            extra_data = VALUES(extra_data),
            version = VALUES(version),
            update_time = NOW()
    </insert>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO strategy_daily_picks (trade_date, strategy_id, stock_code, stock_name, industry, score, ranking,
                                          market_cap, pe_ratio, extra_data, version, create_time, update_time)
        VALUES (#{tradeDate}, #{strategyId}, #{stockCode}, #{stockName}, #{industry}, #{score}, #{ranking},
                #{marketCap}, #{peRatio},
                #{extraData, typeHandler=com.hao.quant.stocklist.infrastructure.persistence.typehandler.JsonMapTypeHandler, jdbcType=OTHER},
                #{version}, NOW(), NOW())
        ON DUPLICATE KEY UPDATE
            stock_name = VALUES(stock_name),
            industry = VALUES(industry),
            score = VALUES(score),
            ranking = VALUES(ranking),
            market_cap = VALUES(market_cap),
            pe_ratio = VALUES(pe_ratio),
            extra_data = VALUES(extra_data),
            version = VALUES(version),
            update_time = NOW()
    </insert>

    <select id="listRecentTradeDates" resultType="java.time.LocalDate">
        SELECT DISTINCT trade_date
        FROM strategy_daily_picks
        ORDER BY trade_date DESC
        LIMIT #{limit}
    </select>
</mapper>
